{"version":3,"sources":["reducers/dataReducer.js","store.js","components/Display/Display.jsx","components/Slider/Slider.jsx","components/Belgium/Belgium.jsx","components/Graph/Graph.jsx","components/Legend/Legend.jsx","App.jsx","index.js"],"names":["initialState","hospByDate","HOSPITALISATIONS","reduce","ac","cv","el","find","x","DATE","undefined","push","hosp","hospByProvince","PROVINCE","offset","maxIn","TOTAL_IN","selectedProvince","mousePosition","y","hoveredProvince","dataReducer","createSlice","name","reducers","setOffset","state","payload","parseInt","setSelectedProvince","setOffsetFromGraph","findIndex","setHoveredProvince","p","unsetMousePosition","actions","store","configureStore","reducer","data","middleware","thunk","Display","toDisplay","useSelector","Date","toLocaleDateString","Slider","dispatch","useDispatch","dataLen","length","type","id","min","max","value","onChange","e","target","Belgium","console","log","baseProfile","height","stroke","strokeWidth","version","viewBox","width","xmlns","provinces","map","province","d","coord","onClick","onMouseEnter","clientX","clientY","onMouseLeave","fill","nb","Graph","selectedDate","_province","dT","getTime","xy","points","join","i","r","cx","cy","Legend","style","top","left","className","App","display","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eae5d310.chunk.js","sourcesContent":["import HOSPITALISATIONS from '../data/hospitalisations.json'\nimport { createSlice } from '@reduxjs/toolkit'\n\nconst hospByDate = HOSPITALISATIONS.reduce((ac, cv) => {\n  const el = ac.find(x => x.DATE === cv.DATE)\n\n  if(el === undefined){\n    ac.push({\n      DATE: cv.DATE,\n      hosp: [cv]\n    })\n  }\n  else{\n    el.hosp.push(cv)\n  }\n\n  return ac\n}, [])\n\nconst hospByProvince = HOSPITALISATIONS.reduce((ac, cv) => {\n  const el = ac.find(x => x.PROVINCE === cv.PROVINCE)\n\n  if(el === undefined){\n    ac.push({\n      PROVINCE: cv.PROVINCE,\n      hosp: [cv]\n    })\n  }\n  else{\n    el.hosp.push(cv)\n  }\n\n  return ac\n}, [])\n\nconst maxIn = HOSPITALISATIONS.reduce((ac, cv) => {\n  if(cv.TOTAL_IN > ac)\n    ac = cv.TOTAL_IN\n  \n  return ac\n}, 0)\n\nconst initialState = {\n  hospByDate,\n  hospByProvince,\n  offset: 0,\n  maxIn,\n  selectedProvince: null,\n  mousePosition: { x: null, y: null },\n  hoveredProvince: null\n}\n\nconst dataReducer = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    setOffset: (state, { payload }) => {\n      state.offset = parseInt(payload)\n    },\n\n    setSelectedProvince: (state, { payload }) => {\n      state.selectedProvince = payload\n    },\n\n    setOffsetFromGraph(state, { payload }){\n      state.offset = state.hospByDate.findIndex(x => x.DATE === payload)\n    },\n\n    setHoveredProvince(state, {payload: [x, y, p]} ){\n      state.hoveredProvince = p\n      state.mousePosition = {x, y}\n    },\n\n    unsetMousePosition: (state) => {\n      state.mousePosition = { x: null, y: null }\n    }\n  },\n})\n\nexport const { \n  setOffset, \n  setSelectedProvince, \n  setOffsetFromGraph, \n  setHoveredProvince,\n  unsetMousePosition\n} = dataReducer.actions\n\nexport default dataReducer.reducer","import { configureStore } from '@reduxjs/toolkit'\nimport dataReducer from './reducers/dataReducer'\nimport thunk from 'redux-thunk'\n\nexport const store = configureStore({\n  reducer: { data: dataReducer },\n  middleware: [thunk]\n})","import { useSelector } from \"react-redux\"\n\nconst Display = () => {\n  const toDisplay = useSelector(state => state.data.hospByDate[state.data.offset])\n\n  return (\n    <div>\n      <h1>{new Date(toDisplay.DATE).toLocaleDateString('fr-FR')}</h1>\n\n      <h2>\n        {toDisplay.hosp.reduce((ac, cv) => (ac += cv.TOTAL_IN), 0)} lits occup√©s\n      </h2>\n    </div>\n  )\n}\n\nexport default Display","import { useDispatch, useSelector } from \"react-redux\"\nimport { setOffset } from '../../reducers/dataReducer'\nimport './Slider.scss'\n\nconst Slider = () => {\n  const dispatch = useDispatch()\n  const offset = useSelector(state => state.data.offset)\n  const dataLen = useSelector(state => state.data.hospByDate.length)\n\n  return (\n    <input type=\"range\" \n           name=\"slider\" \n           id=\"slider\"\n           min={0}\n           max={dataLen - 1}\n           value={offset}\n           onChange={(e) => dispatch(setOffset(e.target.value))} />\n  )\n}\n\nexport default Slider","import { useSelector, useDispatch } from 'react-redux'\nimport { setSelectedProvince, setHoveredProvince, unsetMousePosition } from '../../reducers/dataReducer'\nimport provinces from './provinces.json'\nimport './Belgium.scss'\n\nconst fillipe = (nb, max) => {\n  return `hsl(${120 - ((nb / max) * 120)}, 65%, 65%)`\n}\n\nconst Belgium = () => {\n  const dispatch = useDispatch()\n  const maxIn = useSelector(state => state.data.maxIn)\n  const toDisplay = useSelector(state => state.data.hospByDate[state.data.offset])\n\n  console.log()\n  return (\n  <svg baseProfile=\"tiny\" height={408} stroke=\"#ffffff\" strokeWidth={2} version=\"1.2\" viewBox=\"0 0 1000 817\" width={500} xmlns=\"http://www.w3.org/2000/svg\">\n    {\n      provinces.map(province => (\n        <path id={province.name} \n              d={province.coord}\n              onClick={() => dispatch(setSelectedProvince(province.name))}\n              onMouseEnter={(e) => dispatch(setHoveredProvince([e.clientX, e.clientY, province.name]))}\n              onMouseLeave={(e) => dispatch(unsetMousePosition())}\n              fill={\n                fillipe(toDisplay.hosp.find(x => x.PROVINCE === province.name).TOTAL_IN, maxIn)\n              } \n                /> \n      ))\n    }\n  </svg>\n  )\n}\n\nexport default Belgium","import { useSelector, useDispatch } from \"react-redux\"\nimport { setOffsetFromGraph } from '../../reducers/dataReducer'\nimport './Graph.scss'\n\nconst Graph = () => {\n  const dispatch = useDispatch()\n  const selectedProvince = useSelector(state => state.data.selectedProvince)\n  const maxIn = useSelector(state => state.data.maxIn)\n  const hospByProvince = useSelector(state => state.data.hospByProvince)\n  const selectedDate = useSelector(state => state.data.hospByDate[state.data.offset]).DATE\n\n  if(selectedProvince !== null) {\n    const _province = hospByProvince.find(x => x.PROVINCE === selectedProvince).hosp\n    const dT = new Date(_province[_province.length -1].DATE).getTime() - new Date(_province[0].DATE).getTime()\n    const xy = _province.map(el => {\n                const x = (new Date(el.DATE).getTime() - new Date(_province[0].DATE).getTime()) / dT * 1200\n                const y = 300 - (el.TOTAL_IN / maxIn * 300)\n\n                return [x, y, el.DATE]\n              })\n\n    return (\n      <div>\n        <h1>{selectedProvince}</h1>\n\n        <svg height=\"300\" width=\"1200\" viewBox=\"0 0 1200 300\">\n          <polyline points={\n            xy.map(([x, y]) => `${x},${y}`)\n            .join(' ')\n          } strokeWidth=\"2\" stroke=\"red\" fill=\"none\" />\n          {\n            xy.map(([x, y, d], i) => (\n              i % 7 === 0 && \n              <circle r={5} \n                      cx={x} \n                      cy={y} \n                      stroke=\"#222\" \n                      strokeWidth=\"2\" \n                      fill=\"red\"\n                      onClick={() => dispatch(setOffsetFromGraph(d))} />\n            ))\n          }\n          <rect x={(new Date(selectedDate).getTime() - new Date(_province[0].DATE).getTime()) / dT * 1200} />\n        </svg>\n      </div>\n    )\n  }\n  return (<div>Selectionne une province</div>)\n  \n\n}\n\nexport default Graph","import { useSelector } from \"react-redux\"\nimport './Legend.scss'\n\nconst Legend = () => {\n  const {x, y} = useSelector(state => state.data.mousePosition)\n  const hoveredProvince = useSelector(state => state.data.hoveredProvince)\n  \n  if(x && y){\n    return (\n      <div id=\"legend\" style={{ top: y, left: x}}>\n        <div className=\"txt\">\n          <div>\n            <strong>{hoveredProvince}</strong>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  \n  return ( <div id=\"legend\" /> )\n}\n\nexport default Legend","import './main.scss'\n\nimport Display from './components/Display/Display.jsx'\nimport Slider from './components/Slider/Slider.jsx'\nimport Belgium from './components/Belgium/Belgium.jsx'\nimport Graph from './components/Graph/Graph.jsx'\nimport Legend from './components/Legend/Legend.jsx'\n\n\nconst App = () => (\n  <main>\n    <section style={{ display: 'flex' }}>\n      <Belgium />\n      <Display />\n    </section>\n\n    <Slider />\n    <Graph />\n    <Legend />\n  </main>\n)\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport { store } from './store'\nimport App from './App.jsx'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}